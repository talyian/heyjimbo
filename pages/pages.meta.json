{"filename":"benchmarking_is_hard.md","tags":["coding","fsharp"],"title":["Benchmarking is Hard"],"created":1469671260000, "blurb": "In which we speed up some F# code to compare fairly against Ocaml, Haskell, and Golang"}
{"filename":"fsharp_raytracer_pt1.md","tags":["fsharp","series:fsharp-raytracer:1"],"title":["Raytracer: Getting Started"],"created":1376534242000}
{"filename":"fsharp_raytracer_pt2.md","title":"Sphere/Ray Intersections","tags":["fsharp","series:fsharp-raytracer","series:fsharp-raytracer:2"],"blurb":"We derive the equation to intersect a sphere and a ray from basic definitions","image":"http://i.imgur.com/4ljFFvE.png","created":1377125813000}
{"filename":"fsharp_raytracer_pt3.md","title":"Phong/Lambert shading","tags":["fsharp","series:fsharp-raytracer","series:fsharp-raytracer:3"],"blurb":"A simple Lambert shader gives adds depth to our spheres. Lighting is proportional to the cosine of the angle between the light and the surface normal","image":"http://i.imgur.com/4ljFFvE.png","created":1377126994000}
{"filename":"fsharp_raytracer_pt4.md","title":"Specular Reflection and Mirrors","image":"http://i.imgur.com/V1WZYua.png","blurb":"Reflections are quite simple in a raytracer","tags":["fsharp","series:fsharp-raytracer","series:fsharp-raytracer:4"],"created":1377130172000}
{"filename":"mooseclicker.md","tags":["ctf","security"],"title":["Moose Clicker"],"created":1472343461610, "blurb": "This was a CTF Problem written for a CTF Jam at Dropbox hosted by @eastebry"}
{"filename":"multiple_dispatch.md","tags":["rambling","series:elves:1"],"title":["Visiting Some Opinionated Elves"],"created":1377301633000, "blurb": "Some thoughts on Dynamic dispatch in C#"}
{"filename":"multiple_dispatch_2.md","tags":["rambling","series:elves:2"],"title":["Double Dispatch and Game logic and Message Handling"],"created":1377311111000, "More concrete elves example and benchmarking"}
{"filename":"procedural_castle.md","title":"Creating a Procedural Castle in F#","tags":["gamedev","procedural generation","fsharp"],"created":1457311898138, "blurb": "The first of many procedural generation based posts. This was just a bunch of grammar rules for constructing towers, walls, crenelations, buildings, keeps, and trees. ", "image": "/images/procedural_castle/render.png"}
{"filename":"procedural_level.md","title":"A Platformer Level Generator","tags":["gamedev","procedural generation","typescript"],"created":1457319371652, "blurb": "Kind of boring code, but you can play this in your browser at http://talyian.github.io/procedural_level", "image": "/images/procedural_level/screenshot.png"}
{"filename":"procedural_mountain.md", "title" : "The Mountain from the Noise", "tags": ["gamedev", "procedural generation", "fsharp"], "created": 1480665295000, "blurb": "An entry for the r/procedural_generation monthly contest for Procedural Mountains. This is basically just the normal Value-Noise-Heightmap as implemented in F# and OpenGL", "image": "/images/procedural_mountain/mountain.jpg" }
{"filename":"gallery/mandelbrot.html", "title": "WebGL Mandelbrot Set", "tags": ["procedural generation", "webgl", "gallery"], "blurb": "Rendering A Mandelbrot set in WebGL", "created": 1502224583562, "image": "/images/gallery/mandelbrot.png"}
{"filename":"gallery/tree.html", "title": "WebGL Trees", "tags": ["gallery", "procedural generation", "webgl"], "blurb": "Drawing Procedural Tree branches in WebGL", "created": 1502224583563, "image": "/images/gallery/tree.2.png"}
{"filename":"doorserver.md", "title": "Arduino Door Remote", "tags": ["electronics", "arduino", "esp8266", "iot", "nodejs"], "blurb": "Opening my door via email - Adventures in the IoT.", "created": 1502224583564, "image": "/images/doorserver/photo.jpg"}
{"filename":"about.md", "title": "about", "blurb": "About", "created": 0 }

